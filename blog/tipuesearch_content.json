{"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/mdecycu/cmsimde_site 網站: https://mde.tw/cmsimde_site/ 簡報: https://mde.tw/cmsimde_site/reveal 網誌: https://mde.tw/cmsimde_site/blog","tags":"misc","url":"./pages/about/"},{"title":"2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"Spring","url":"./2024-Spring-w1-blog-tutorial.html"},{"title":"w1","text":"W1 建立個人課程網站 必須自行建立 Github 帳號","tags":"w1","url":"./w1.html"},{"title":"w11","text":"w11 為了避免衝突先在分支改版後再進行合併 git branch 確認分支位置 git branch 41223110 新增分支 git branch 確認分支創建成功 git checkout 41223110 切換分支 git branch 確認切換成功 ps -a 確認有沒有執行中的python3，須為無 更改網頁內容 ======= git branch git add . git commit -m \"新增內容\" git push origin 41223110 git branch git checkout main 切回main進行合併 git branch git merge 41223110 進行合併 git branch git status git pull 要求宣告 git config pull.rebase false git pull 合併 ./acp \"更改內容\" \"41223110\"","tags":"w11","url":"./w11.html"},{"title":"w3","text":"w3 個人倉儲納為分組倉儲的子模組 git submodule add github倉儲網址.git 學號","tags":"w3","url":"./w3.html"},{"title":"w6","text":"w6 Git 是一個分布式版本控制系統，用於跟蹤文件的變化和協作開發。它由 Linus Torvalds 於 2005 年創建，最初是為了幫助管理 Linux 內核的開發。以下是 Git 的發展歷史以及相關創作者的簡歷： 2005 年：Linus Torvalds 創建了 Git，並在 Linux 內核開發中開始使用它。 2005 年至今：Git 經歷了持續的發展和改進，吸引了全球範圍內的開發者和企業的廣泛采用。 Git 的關鍵版本和裏程碑： 2005 年：Git 1.0 發布。 2007 年：GitHub 成立，成為 Git 托管服務的主要平台之一，推動了 Git 的流行。 2008 年：Git 1.5 發布，引入了許多新功能和改進。 2013 年：Git 1.8 發布，引入了子模塊的支持等功能。 2016 年：Git 2.0 發布，帶來了性能和用戶體驗方面的改進。 2018 年：Git 2.18 發布，引入了一些新特性和改進。 2020 年：Git 2.28 發布，繼續改進性能和用戶體驗。 創作者簡歷： Linus Torvalds：芬蘭計算機程序員，Linux 內核的創建者和 Git 的創作者。他是開源軟件社區的重要人物之一，對計算機科學和開源社區產生了巨大影響。 使用 Git 的專業人士可以利用它來解決內容管理問題的各種方面，包括但不限於： 版本控制：Git 可以跟蹤文件的變化，使團隊成員能夠協作開發，並確保每個人都使用最新的代碼版本。這有助於避免沖突和混亂，同時也可以回溯歷史版本。 分支管理：Git 允許創建分支，這使得團隊能夠並行開發不同的功能或修覆不同的 bug，而不會幹擾主線開發。分支可以輕松合並回主線，從而實現協作。 遠程倉庫協作：Git 可以與遠程倉庫（如 GitHub、GitLab、Bitbucket 等）集成，使得多個開發者可以協作開發項目。他們可以推送（push）自己的更改到遠程倉庫，並拉取（pull）其他人的更改，從而實現協作開發。 代碼審查：Git 的分支和提交歷史使得進行代碼審查變得更加容易。團隊成員可以通過查看提交歷史和比較不同分支之間的差異來進行代碼審查，從而確保代碼質量和一致性。 備份和恢覆：Git 可以作為項目的備份工具，因為它可以存儲項目的完整歷史記錄。即使出現意外情況，例如誤刪文件，也可以通過 Git 來恢覆文件到之前的狀態。 綜上所述，Git 是一個強大的工具，可以幫助專業人士解決內容管理問題，提高團隊的生產效率和代碼質量。","tags":"w6","url":"./w6.html"}]}